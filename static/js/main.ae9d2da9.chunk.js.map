{"version":3,"sources":["candy-machine.ts","connection.tsx","userSettings.tsx","PhaseHeader.tsx","MintButton.tsx","countdown.tsx","Minter.tsx","Components/faq.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils.ts"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","isSoldOut","isActive","goLiveDate","Date","getTime","endSettings","endSettingType","date","number","treasury","wallet","tokenMint","gatekeeper","whitelistMintSettings","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","mintOneToken","Keypair","generate","getAtaForMint","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","cleanupInstructions","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","Token","createInitMintInstruction","createMintToInstruction","instructions","getNetworkToken","gatekeeperNetwork","push","expireOnUse","CIVIC","getNetworkExpire","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","undefined","sendTransactions","txs","map","t","ms","SequenceType","instructionSet","signersSet","sequenceType","Parallel","commitment","successCallback","ind","failCallback","block","WalletNotConnectedError","unsignedTxns","getRecentBlockhash","i","transaction","Transaction","forEach","add","recentBlockhash","blockhash","setSigners","s","partialSign","signAllTransactions","signedTxns","pendingTxns","breakEarlyObject","breakEarly","signedTxnPromise","sendSignedTransaction","signedTransaction","then","catch","reason","StopOnFailure","all","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","Phase","mintPanic","whitelistSettings","React","Component","enabled","startDate","endDate","countdown","title","desc","enableCustomHTML","publicSaleSettings","CTAButton","styled","Button","MintButton","onMint","isMinting","useGateway","requestGatewayToken","gatewayStatus","useState","clicked","setClicked","whitelistStartDate","toDate","whitelistEndDate","publicMintStart","publicMintEnd","whiteListSaleCheck","now","WhitelistMintActive","publicSaleCheck","PublicMintActive","useEffect","GatewayStatus","ACTIVE","className","disabled","onClick","token","variant","CircularProgress","makeStyles","theme","createStyles","root","display","padding","spacing","margin","marginRight","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","fontWeight","item","ConnectButton","WalletDialogButton","Home","div","props","rpcUrl","rpcHost","whiteListTokenBalance","setWhiteListTokenBalance","setIsMinting","mintingTotal","setMintingTotal","setItemsAvailable","setPublicKey","setCandyMachine","setPrice","useWallet","useMemo","signTransaction","open","severity","alertState","setAlertState","document","getElementById","click","connected","mintTxId","txTimeout","msg","code","window","location","reload","indexOf","cndy","getParsedTokenAccountsByOwner","tokenAmount","parsed","info","amount","getTokenAmount","curr","whiteListStart","whiteListEnd","publicSaleStart","Panic","PublicMint","WhiteListMint","Welcome","getPhase","clusterUrl","options","autoShowModal","Snackbar","autoHideDuration","onClose","Alert","Faq","$","removeClass","this","parent","find","attr","split","addClass","createTheme","palette","type","process","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","getMathWallet","setTimerDays","setTimerHours","setTimerMinutes","setTimerSeconds","countDownDate","setInterval","localTime","distance","days","Math","floor","hours","minutes","seconds","clearInterval","startTimer","src","alt","ThemeProvider","ConnectionProvider","WalletProvider","autoConnect","Minter","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","buyer"],"mappings":"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","file":"static/js/main.ae9d2da9.chunk.js","sourcesContent":["import * as anchor from '@project-serum/anchor';\r\n\r\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport { sendTransactions } from './connection';\r\n\r\nimport {\r\n  CIVIC,\r\n  getAtaForMint,\r\n  getNetworkExpire,\r\n  getNetworkToken,\r\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n} from './utils';\r\n\r\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\r\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\r\n);\r\n\r\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\r\n);\r\n\r\ninterface CandyMachineState {\r\n  itemsAvailable: number;\r\n  itemsRedeemed: number;\r\n  itemsRemaining: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  tokenMint: anchor.web3.PublicKey;\r\n  isSoldOut: boolean;\r\n  isActive: boolean;\r\n  goLiveDate: anchor.BN;\r\n  price: anchor.BN;\r\n  gatekeeper: null | {\r\n    expireOnUse: boolean;\r\n    gatekeeperNetwork: anchor.web3.PublicKey;\r\n  };\r\n  endSettings: null | [number, anchor.BN];\r\n  whitelistMintSettings: null | {\r\n    mode: any;\r\n    mint: anchor.web3.PublicKey;\r\n    presale: boolean;\r\n    discountPrice: null | anchor.BN;\r\n  };\r\n  hiddenSettings: null | {\r\n    name: string;\r\n    uri: string;\r\n    hash: Uint8Array;\r\n  };\r\n}\r\n\r\nexport interface CandyMachineAccount {\r\n  id: anchor.web3.PublicKey;\r\n  program: anchor.Program;\r\n  state: CandyMachineState;\r\n}\r\n\r\nexport const awaitTransactionSignatureConfirmation = async (\r\n  txid: anchor.web3.TransactionSignature,\r\n  timeout: number,\r\n  connection: anchor.web3.Connection,\r\n  commitment: anchor.web3.Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<anchor.web3.SignatureStatus | null | void> => {\r\n  let done = false;\r\n  let status: anchor.web3.SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId]) {\r\n    connection.removeSignatureListener(subId);\r\n  }\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n};\r\n\r\n/* export */ const createAssociatedTokenAccountInstruction = (\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) => {\r\n  const keys = [\r\n    { pubkey: payer, isSigner: true, isWritable: true },\r\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\r\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\r\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\r\n    {\r\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new anchor.web3.TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n};\r\n\r\nexport const getCandyMachineState = async (\r\n  anchorWallet: anchor.Wallet,\r\n  candyMachineId: anchor.web3.PublicKey,\r\n  connection: anchor.web3.Connection,\r\n): Promise<CandyMachineAccount> => {\r\n  const provider = new anchor.Provider(connection, anchorWallet, {\r\n    preflightCommitment: 'recent',\r\n  });\r\n\r\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\r\n\r\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\r\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\r\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\r\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\r\n\r\n  return {\r\n    id: candyMachineId,\r\n    program,\r\n    state: {\r\n      itemsAvailable,\r\n      itemsRedeemed,\r\n      itemsRemaining,\r\n      isSoldOut: itemsRemaining === 0,\r\n      isActive:\r\n        state.data.goLiveDate.toNumber() < new Date().getTime() / 1000 &&\r\n        (state.endSettings\r\n          ? state.endSettings.endSettingType.date\r\n            ? state.endSettings.number.toNumber() > new Date().getTime() / 1000\r\n            : itemsRedeemed < state.endSettings.number.toNumber()\r\n          : true),\r\n      goLiveDate: state.data.goLiveDate,\r\n      treasury: state.wallet,\r\n      tokenMint: state.tokenMint,\r\n      gatekeeper: state.data.gatekeeper,\r\n      endSettings: state.data.endSettings,\r\n      whitelistMintSettings: state.data.whitelistMintSettings,\r\n      hiddenSettings: state.data.hiddenSettings,\r\n      price: state.data.price,\r\n    },\r\n  };\r\n};\r\n\r\nconst getMasterEdition = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n        Buffer.from('edition'),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nconst getMetadata = async (\r\n  mint: anchor.web3.PublicKey,\r\n): Promise<anchor.web3.PublicKey> => {\r\n  return (\r\n    await anchor.web3.PublicKey.findProgramAddress(\r\n      [\r\n        Buffer.from('metadata'),\r\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\r\n        mint.toBuffer(),\r\n      ],\r\n      TOKEN_METADATA_PROGRAM_ID,\r\n    )\r\n  )[0];\r\n};\r\n\r\nexport const getCandyMachineCreator = async (\r\n  candyMachine: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\r\n    CANDY_MACHINE_PROGRAM,\r\n  );\r\n};\r\n\r\nexport const mintOneToken = async (\r\n  candyMachine: CandyMachineAccount,\r\n  payer: anchor.web3.PublicKey,\r\n): Promise<(string | undefined)[]> => {\r\n  const mint = anchor.web3.Keypair.generate();\r\n\r\n  const userTokenAccountAddress = (\r\n    await getAtaForMint(mint.publicKey, payer)\r\n  )[0];\r\n\r\n  const userPayingAccountAddress = candyMachine.state.tokenMint\r\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\r\n    : payer;\r\n\r\n  const candyMachineAddress = candyMachine.id;\r\n  const remainingAccounts = [];\r\n  const signers: anchor.web3.Keypair[] = [mint];\r\n  const cleanupInstructions = [];\r\n  const instructions = [\r\n    anchor.web3.SystemProgram.createAccount({\r\n      fromPubkey: payer,\r\n      newAccountPubkey: mint.publicKey,\r\n      space: MintLayout.span,\r\n      lamports:\r\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\r\n          MintLayout.span,\r\n        ),\r\n      programId: TOKEN_PROGRAM_ID,\r\n    }),\r\n    Token.createInitMintInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      0,\r\n      payer,\r\n      payer,\r\n    ),\r\n    createAssociatedTokenAccountInstruction(\r\n      userTokenAccountAddress,\r\n      payer,\r\n      payer,\r\n      mint.publicKey,\r\n    ),\r\n    Token.createMintToInstruction(\r\n      TOKEN_PROGRAM_ID,\r\n      mint.publicKey,\r\n      userTokenAccountAddress,\r\n      payer,\r\n      [],\r\n      1,\r\n    ),\r\n  ];\r\n\r\n  if (candyMachine.state.gatekeeper) {\r\n    remainingAccounts.push({\r\n      pubkey: (\r\n        await getNetworkToken(\r\n          payer,\r\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n        )\r\n      )[0],\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    if (candyMachine.state.gatekeeper.expireOnUse) {\r\n      remainingAccounts.push({\r\n        pubkey: CIVIC,\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: (\r\n          await getNetworkExpire(\r\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\r\n          )\r\n        )[0],\r\n        isWritable: false,\r\n        isSigner: false,\r\n      });\r\n    }\r\n  }\r\n  if (candyMachine.state.whitelistMintSettings) {\r\n    const mint = new anchor.web3.PublicKey(\r\n      candyMachine.state.whitelistMintSettings.mint,\r\n    );\r\n\r\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\r\n    remainingAccounts.push({\r\n      pubkey: whitelistToken,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n\r\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\r\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\r\n\r\n      remainingAccounts.push({\r\n        pubkey: mint,\r\n        isWritable: true,\r\n        isSigner: false,\r\n      });\r\n      remainingAccounts.push({\r\n        pubkey: whitelistBurnAuthority.publicKey,\r\n        isWritable: false,\r\n        isSigner: true,\r\n      });\r\n      signers.push(whitelistBurnAuthority);\r\n      const exists =\r\n        await candyMachine.program.provider.connection.getAccountInfo(\r\n          whitelistToken,\r\n        );\r\n      if (exists) {\r\n        instructions.push(\r\n          Token.createApproveInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            whitelistBurnAuthority.publicKey,\r\n            payer,\r\n            [],\r\n            1,\r\n          ),\r\n        );\r\n        cleanupInstructions.push(\r\n          Token.createRevokeInstruction(\r\n            TOKEN_PROGRAM_ID,\r\n            whitelistToken,\r\n            payer,\r\n            [],\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (candyMachine.state.tokenMint) {\r\n    const transferAuthority = anchor.web3.Keypair.generate();\r\n\r\n    signers.push(transferAuthority);\r\n    remainingAccounts.push({\r\n      pubkey: userPayingAccountAddress,\r\n      isWritable: true,\r\n      isSigner: false,\r\n    });\r\n    remainingAccounts.push({\r\n      pubkey: transferAuthority.publicKey,\r\n      isWritable: false,\r\n      isSigner: true,\r\n    });\r\n\r\n    instructions.push(\r\n      Token.createApproveInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        transferAuthority.publicKey,\r\n        payer,\r\n        [],\r\n        candyMachine.state.price.toNumber(),\r\n      ),\r\n    );\r\n    cleanupInstructions.push(\r\n      Token.createRevokeInstruction(\r\n        TOKEN_PROGRAM_ID,\r\n        userPayingAccountAddress,\r\n        payer,\r\n        [],\r\n      ),\r\n    );\r\n  }\r\n  const metadataAddress = await getMetadata(mint.publicKey);\r\n  const masterEdition = await getMasterEdition(mint.publicKey);\r\n\r\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\r\n    candyMachineAddress,\r\n  );\r\n\r\n  instructions.push(\r\n    await candyMachine.program.instruction.mintNft(creatorBump, {\r\n      accounts: {\r\n        candyMachine: candyMachineAddress,\r\n        candyMachineCreator,\r\n        payer: payer,\r\n        wallet: candyMachine.state.treasury,\r\n        mint: mint.publicKey,\r\n        metadata: metadataAddress,\r\n        masterEdition,\r\n        mintAuthority: payer,\r\n        updateAuthority: payer,\r\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\r\n        tokenProgram: TOKEN_PROGRAM_ID,\r\n        systemProgram: SystemProgram.programId,\r\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\r\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\r\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\r\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\r\n      },\r\n      remainingAccounts:\r\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\r\n    }),\r\n  );\r\n\r\n  try {\r\n    return (\r\n      await sendTransactions(\r\n        candyMachine.program.provider.connection,\r\n        candyMachine.program.provider.wallet,\r\n        [instructions, cleanupInstructions],\r\n        [signers, []],\r\n      )\r\n    ).txs.map(t => t.txid);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const shortenAddress = (address: string, chars = 4): string => {\r\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\r\n};\r\n\r\nconst sleep = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n","import {\r\n  Keypair,\r\n  Commitment,\r\n  Connection,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n  Blockhash,\r\n  FeeCalculator,\r\n} from '@solana/web3.js';\r\n\r\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const getErrorForTransaction = async (\r\n  connection: Connection,\r\n  txid: string,\r\n) => {\r\n  // wait for all confirmation before geting transaction\r\n  await connection.confirmTransaction(txid, 'max');\r\n\r\n  const tx = await connection.getParsedConfirmedTransaction(txid);\r\n\r\n  const errors: string[] = [];\r\n  if (tx?.meta && tx.meta.logMessages) {\r\n    tx.meta.logMessages.forEach(log => {\r\n      const regex = /Error: (.*)/gm;\r\n      let m;\r\n      while ((m = regex.exec(log)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regex.lastIndex) {\r\n          regex.lastIndex++;\r\n        }\r\n\r\n        if (m.length > 1) {\r\n          errors.push(m[1]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport enum SequenceType {\r\n  Sequential,\r\n  Parallel,\r\n  StopOnFailure,\r\n}\r\n\r\nexport async function sendTransactionsWithManualRetry(\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[][],\r\n  signers: Keypair[][],\r\n): Promise<(string | undefined)[]> {\r\n  let stopPoint = 0;\r\n  let tries = 0;\r\n  let lastInstructionsLength = null;\r\n  let toRemoveSigners: Record<number, boolean> = {};\r\n  instructions = instructions.filter((instr, i) => {\r\n    if (instr.length > 0) {\r\n      return true;\r\n    } else {\r\n      toRemoveSigners[i] = true;\r\n      return false;\r\n    }\r\n  });\r\n  let ids: string[] = [];\r\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\r\n\r\n  while (stopPoint < instructions.length && tries < 3) {\r\n    instructions = instructions.slice(stopPoint, instructions.length);\r\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\r\n\r\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\r\n    else tries = 0;\r\n\r\n    try {\r\n      if (instructions.length === 1) {\r\n        const id = await sendTransactionWithRetry(\r\n          connection,\r\n          wallet,\r\n          instructions[0],\r\n          filteredSigners[0],\r\n          'single',\r\n        );\r\n        ids.push(id.txid);\r\n        stopPoint = 1;\r\n      } else {\r\n        const { txs } = await sendTransactions(\r\n          connection,\r\n          wallet,\r\n          instructions,\r\n          filteredSigners,\r\n          SequenceType.StopOnFailure,\r\n          'single',\r\n        );\r\n        ids = ids.concat(txs.map(t => t.txid));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    console.log(\r\n      'Died on ',\r\n      stopPoint,\r\n      'retrying from instruction',\r\n      instructions[stopPoint],\r\n      'instructions length is',\r\n      instructions.length,\r\n    );\r\n    lastInstructionsLength = instructions.length;\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\nexport const sendTransactions = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructionSet: TransactionInstruction[][],\r\n  signersSet: Keypair[][],\r\n  sequenceType: SequenceType = SequenceType.Parallel,\r\n  commitment: Commitment = 'singleGossip',\r\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => { },\r\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\r\n  block?: BlockhashAndFeeCalculator,\r\n): Promise<{ number: number; txs: { txid: string; slot: number }[] }> => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  const unsignedTxns: Transaction[] = [];\r\n\r\n  if (!block) {\r\n    block = await connection.getRecentBlockhash(commitment);\r\n  }\r\n\r\n  for (let i = 0; i < instructionSet.length; i++) {\r\n    const instructions = instructionSet[i];\r\n    const signers = signersSet[i];\r\n\r\n    if (instructions.length === 0) {\r\n      continue;\r\n    }\r\n\r\n    let transaction = new Transaction();\r\n    instructions.forEach(instruction => transaction.add(instruction));\r\n    transaction.recentBlockhash = block.blockhash;\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n\r\n    if (signers.length > 0) {\r\n      transaction.partialSign(...signers);\r\n    }\r\n\r\n    unsignedTxns.push(transaction);\r\n  }\r\n\r\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\r\n\r\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\r\n\r\n  let breakEarlyObject = { breakEarly: false, i: 0 };\r\n  console.log(\r\n    'Signed txns length',\r\n    signedTxns.length,\r\n    'vs handed in length',\r\n    instructionSet.length,\r\n  );\r\n  for (let i = 0; i < signedTxns.length; i++) {\r\n    const signedTxnPromise = sendSignedTransaction({\r\n      connection,\r\n      signedTransaction: signedTxns[i],\r\n    });\r\n\r\n    signedTxnPromise\r\n      .then(({ txid, slot }) => {\r\n        successCallback(txid, i);\r\n      })\r\n      .catch(reason => {\r\n        // @ts-ignore\r\n        failCallback(signedTxns[i], i);\r\n        if (sequenceType === SequenceType.StopOnFailure) {\r\n          breakEarlyObject.breakEarly = true;\r\n          breakEarlyObject.i = i;\r\n        }\r\n      });\r\n\r\n    if (sequenceType !== SequenceType.Parallel) {\r\n      try {\r\n        await signedTxnPromise;\r\n      } catch (e) {\r\n        console.log('Caught failure', e);\r\n        if (breakEarlyObject.breakEarly) {\r\n          console.log('Died on ', breakEarlyObject.i);\r\n          // Return the txn we failed on by index\r\n          return {\r\n            number: breakEarlyObject.i,\r\n            txs: await Promise.all(pendingTxns),\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      pendingTxns.push(signedTxnPromise);\r\n    }\r\n  }\r\n\r\n  if (sequenceType !== SequenceType.Parallel) {\r\n    await Promise.all(pendingTxns);\r\n  }\r\n\r\n  return { number: signedTxns.length, txs: await Promise.all(pendingTxns) };\r\n};\r\n\r\nexport const sendTransaction = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  awaitConfirmation = true,\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  const rawTransaction = transaction.serialize();\r\n  let options = {\r\n    skipPreflight: true,\r\n    commitment,\r\n  };\r\n\r\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\r\n  let slot = 0;\r\n\r\n  if (awaitConfirmation) {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      DEFAULT_TIMEOUT,\r\n      connection,\r\n      commitment,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    slot = confirmation?.slot || 0;\r\n\r\n    if (confirmation?.err) {\r\n      const errors = await getErrorForTransaction(connection, txid);\r\n\r\n      console.log(errors);\r\n      throw new Error(`Raw transaction ${txid} failed`);\r\n    }\r\n  }\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const sendTransactionWithRetry = async (\r\n  connection: Connection,\r\n  wallet: any,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\r\n\r\n  let transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  if (!includesFeePayer) {\r\n    transaction = await wallet.signTransaction(transaction);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'recent',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      console.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err: any) {\r\n    console.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) { }\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      console.log('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            console.log('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            console.log('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      console.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          if (!done) {\r\n            if (!status) {\r\n              console.log('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              console.log('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              console.log('REST no confirmations for', txid, status);\r\n            } else {\r\n              console.log('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            console.log('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  console.log('Returning status', status);\r\n  return status;\r\n}\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import * as anchor from \"@project-serum/anchor\";\r\nimport React from \"react\";\r\n\r\nimport {\r\n  WhitelistSettings,\r\n  PublicSaleSettings,\r\n  WelcomeSettings,\r\n} from \"./userSettingsInterfaces\";\r\n\r\nfunction date(date: string) {\r\n  let f = new anchor.BN(new Date(date).getTime() / 1000);\r\n  return f;\r\n}\r\n\r\n//\r\n// Below are settings that will trigger the UI of the mint box currently. This is a basic\r\n// implementation to start with but incorporates whitelist minting sales by turning on\r\n// the mint function between to dates. This will allow users to mint while the candy machine\r\n// is still in it's off state allowing minting via SLP tokens.\r\n//\r\n// You can play with the settings below and also the CMv2 start time setting to trigger different\r\n// the different UI modes.\r\n//\r\n//  This is the current UI set up below and the new phases.\r\n//\r\n//    Welcome\r\n//    Whitelist\r\n//    Public Minting\r\n//\r\n//    any settings you are not using need to be set as 'undefined' without quotetation marks\r\n//\r\n//         title: undefined\r\n//\r\n//    for dates use the following format\r\n//\r\n//        date('1 Jan 2020 00:00:00 <timezone>')\r\n//\r\n//\r\n//\r\n\r\nexport const mintPanic = {\r\n  enabled: false,\r\n  title: \"Minting Paused\",\r\n  desc: \"We have dectected and issue while minting. Standby for an update\",\r\n};\r\n\r\n///                             ///\r\n///      Welcome Settings       ///\r\n///                             ///\r\n\r\nexport const welcomeSettings: WelcomeSettings = {\r\n\r\n  //Title and Description\r\n  title: \"Welcome!\",\r\n  desc: \"Connect your wallet and load in! Whitelist mint starts soon!\",\r\n\r\n  // Countdown Timer\r\n  countdownEnable: false,\r\n  countdownTo: date(\"2 Jan 2022 00:00:00 GMT\"),\r\n  //Example date below\r\n  // date('29 2021 00:00:00 GMT')\r\n\r\n  // showprice\r\n  showPrice: false,\r\n\r\n  //Enable Custom HTML\r\n  enableCustomHTML: false,\r\n};\r\n\r\nexport class MintWelcomeCustomHTML extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"custom-mint-container\">\r\n        {/* Add Custom HTML code for Welcome Here! */}\r\n\r\n        \r\n        <p>Test 1</p>\r\n        \r\n        \r\n        {/* End */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n///                             ///\r\n///   Whitelist Sale Settings   ///\r\n///                             ///\r\n\r\n// The white list does NOTHING to the candy machine itself. It just enables the mint button\r\n// on the site so people can purchase as long as you have the SLP token's set up for you\r\n// whitelist. If your candy machine is not set up for SLP token whitelist purchasing then\r\n// all transations will fail, all transactions will fail for people who also do not hold the\r\n// SLP token. This also does not stop people minting directly from the program.\r\n\r\nexport const whitelistSettings: WhitelistSettings = {\r\n  //If you want to use the whitelist feature enable it.\r\n  enabled: true,\r\n\r\n  startDate: date(\"1 Jan 2022 00:00:00 GMT\"),\r\n  endDate: date(\"8 Jan 2022 00:00:00 GMT\"),\r\n  countdown: true,\r\n  //Example date below\r\n  // date('29 2021 00:00:00 GMT')\r\n\r\n  //Wallet Title and Description\r\n  title: \"White List\",\r\n  desc: undefined,\r\n\r\n  //Enable Custom HTML Below\r\n  enableCustomHTML: false,\r\n};\r\n\r\n\r\nexport class MintWhitelistCustomHTML extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"custom-mint-container\">\r\n        {/* Add Custom HTML code for Whitelist Stage Here! */}\r\n\r\n        \r\n        <p>Test 2</p>\r\n        \r\n        \r\n        {/* End */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n///                             ///\r\n///     Public Sale Settings    ///\r\n///                             ///\r\n\r\nexport const publicSaleSettings: PublicSaleSettings = {\r\n  //start date and end date must match your Candy Machine Config for public launch!\r\n\r\n  startDate: date(\"7 Jan 2022 00:00:00 GMT\"),\r\n  endDate: undefined,\r\n  countdown: false,\r\n  //Example date below\r\n  // date('29 2021 00:00:00 GMT')\r\n\r\n  //Title and Description\r\n  title: \"Public Sale\",\r\n  desc: \"Sale is now live. Mint your NFT below\",\r\n\r\n  //Enable Custom HTML\r\n  enableCustomHTML: false,\r\n};\r\n\r\nexport class MintPublicSaleCustomHTML extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"custom-mint-container\">\r\n        {/* Add Custom HTML code for Public Minting Here! */}\r\n\r\n        \r\n        <p>Test 3</p>\r\n        \r\n        \r\n        {/* End */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as anchor from \"@project-serum/anchor\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { PhaseCountdown } from \"./countdown\";\r\nimport { toDate } from \"./utils\";\r\nimport { CandyMachineAccount } from \"./candy-machine\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport {\r\n  publicSaleSettings,\r\n  whitelistSettings,\r\n  welcomeSettings,\r\n  mintPanic,\r\n} from \"./userSettings\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport enum Phase {\r\n  AnticipationPhase, // FL, AKA Phase 0\r\n  SetPrice, // FL, AKA Phase 1\r\n  GracePeriod, // FL, AKA Phase 2\r\n  Lottery, // FL\r\n  RaffleFinished, // FL, AKA Phase 3\r\n  WaitForCM, // FL,\r\n  Phase4,\r\n  MintOff,\r\n  WhiteListMint,\r\n  PublicMint,\r\n  Welcome,\r\n  Panic,\r\n}\r\n\r\nexport function getPhase(\r\n  candyMachine: CandyMachineAccount | undefined\r\n): Phase {\r\n  const curr = new Date().getTime();\r\n  // const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\r\n  const whiteListStart = toDate(whitelistSettings.startDate)?.getTime();\r\n  const whiteListEnd = toDate(whitelistSettings.endDate)?.getTime();\r\n  const publicSaleStart = toDate(publicSaleSettings.startDate)?.getTime();\r\n  // const publicSaleEnd = toDate(publicSaleSettings.endDate)?.getTime();\r\n\r\n  //Countdown, WhiteList Minting, Public Minting,\r\n\r\n  if (mintPanic.enabled === true) {\r\n    return Phase.Panic;\r\n  } else if (publicSaleStart && curr > publicSaleStart) {\r\n    return Phase.PublicMint;\r\n  } else if (\r\n    whitelistSettings.enabled &&\r\n    whiteListStart &&\r\n    whiteListEnd &&\r\n    curr > whiteListStart &&\r\n    curr < whiteListEnd\r\n  ) {\r\n    return Phase.WhiteListMint;\r\n  } else {\r\n    return Phase.Welcome;\r\n  }\r\n}\r\n\r\nconst Header = (props: {\r\n  phaseName: string;\r\n  desc: string | undefined;\r\n  date?: anchor.BN | undefined;\r\n  status?: string;\r\n  countdown?: boolean;\r\n  countdownEnable?: boolean;\r\n}) => {\r\n  const { phaseName, desc, date, status, countdownEnable } = props;\r\n  return (\r\n    <>\r\n      {countdownEnable === true && (\r\n        <Grid\r\n          container\r\n          style={{ position: \"absolute\", top: \"-30px\", left: \"0px\" }}\r\n        >\r\n          <Container style={{ justifyContent: \"center\" }}>\r\n            <PhaseCountdown\r\n              date={toDate(date)}\r\n              style={{ justifyContent: \"center\" }}\r\n              status={status || \"COMPLETE\"}\r\n            />\r\n          </Container>\r\n        </Grid>\r\n      )}\r\n      <Grid container className=\"mintHeader\" alignItems=\"center\">\r\n        <Grid>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{ fontWeight: 600, textAlign: \"center\" }}\r\n            className=\"pb-2\"\r\n          >\r\n            {phaseName}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {desc && (\r\n        <Typography className=\"pb-2\" variant=\"body1\" color=\"textSecondary\">\r\n          {desc}\r\n        </Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ntype PhaseHeaderProps = {\r\n  phase: Phase;\r\n\r\n  candyMachine?: CandyMachineAccount;\r\n \r\n  rpcUrl: string;\r\n};\r\n\r\nexport const PhaseHeader = ({\r\n  phase,\r\n  \r\n  candyMachine,\r\n \r\n  \r\n}: PhaseHeaderProps) => {\r\n  const wallet = useWallet();\r\n  console.log(\"D\", candyMachine);\r\n  console.log(\"Wallet\", wallet);\r\n\r\n  return (\r\n    <>\r\n      {phase === Phase.Panic && (\r\n        <Header phaseName={mintPanic.title} desc={mintPanic.desc} />\r\n      )}\r\n\r\n      {phase === Phase.Welcome && (\r\n        <Header\r\n          phaseName={welcomeSettings.title}\r\n          desc={welcomeSettings.desc}\r\n          date={welcomeSettings.countdownTo}\r\n          countdownEnable={welcomeSettings.countdownEnable}\r\n        />\r\n      )}\r\n\r\n      {phase === Phase.WhiteListMint && (\r\n        <>\r\n          <Header\r\n            phaseName={whitelistSettings.title}\r\n            desc={whitelistSettings.desc}\r\n            date={whitelistSettings.endDate}\r\n            countdownEnable={whitelistSettings.countdown}\r\n            status=\"WHITELIST LIVE\"\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {phase === Phase.PublicMint && (\r\n        <>\r\n          <Header\r\n            phaseName={publicSaleSettings.title}\r\n            desc={publicSaleSettings.desc}\r\n            date={publicSaleSettings.endDate}\r\n            countdownEnable={publicSaleSettings.countdown}\r\n            status=\"LIVE\"\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CandyMachineAccount } from './candy-machine';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { whitelistSettings, publicSaleSettings, mintPanic } from './userSettings';\r\nimport { toDate } from './utils'\r\n\r\n\r\nexport const CTAButton = styled(Button)`\r\n  \r\n`; // add your styles here\r\n\r\nexport const MintButton = ({\r\n  onMint,\r\n  candyMachine,\r\n\r\n  isMinting,\r\n\r\n\r\n}: {\r\n  onMint: () => Promise<void>;\r\n  candyMachine: CandyMachineAccount | undefined;\r\n\r\n  isMinting: boolean;\r\n\r\n}) => {\r\n  const { requestGatewayToken, gatewayStatus } = useGateway();\r\n  const [clicked, setClicked] = useState(false);\r\n  const whitelistStartDate = toDate(whitelistSettings.startDate)?.getTime();\r\n  const whitelistEndDate = toDate(whitelistSettings.endDate)?.getTime();\r\n  const publicMintStart = toDate(publicSaleSettings.startDate)?.getTime();\r\n  const publicMintEnd = toDate(publicSaleSettings.endDate)?.getTime();\r\n\r\n  function whiteListSaleCheck() {\r\n    if (whitelistSettings.enabled && (whitelistStartDate && whitelistEndDate) && Date.now() > whitelistStartDate && Date.now() < whitelistEndDate) {\r\n\r\n      return true\r\n    } else {\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  let WhitelistMintActive = whiteListSaleCheck()\r\n  console.log('is Whitelist Sale Active? ' + whiteListSaleCheck())\r\n\r\n  function publicSaleCheck() {\r\n\r\n    if (publicMintStart && publicMintEnd) {\r\n      if (Date.now() > publicMintStart && Date.now() < publicMintEnd) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n    else if (publicMintStart) {\r\n      if (Date.now() > publicMintStart) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  let PublicMintActive = publicSaleCheck()\r\n\r\n  console.log('is public sale live? ' + publicSaleCheck())\r\n\r\n  console.log(candyMachine?.state.isSoldOut, isMinting, (WhitelistMintActive || PublicMintActive), !candyMachine?.state.isActive)\r\n\r\n  useEffect(() => {\r\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\r\n      console.log('Minting');\r\n      onMint();\r\n      setClicked(false);\r\n    }\r\n  }, [gatewayStatus, clicked, setClicked, onMint]);\r\n  return (\r\n    <CTAButton\r\n      className=\"wallet-button\"\r\n      disabled={\r\n        candyMachine?.state.isSoldOut ||\r\n        isMinting ||\r\n        mintPanic.enabled ||\r\n        !(WhitelistMintActive || PublicMintActive)\r\n      }\r\n      onClick={async () => {\r\n        setClicked(true);\r\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\r\n          console.log('gatekeeper active')\r\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\r\n            console.log(gatewayStatus + GatewayStatus.ACTIVE)\r\n            setClicked(true);\r\n          } else {\r\n            console.log('requeting token')\r\n            let token = await requestGatewayToken();\r\n            console.log(token);\r\n          }\r\n        } else {\r\n          await onMint();\r\n          setClicked(false);\r\n        }\r\n      }}\r\n      variant=\"contained\"\r\n    >\r\n      {/*<div className='mint-button-text'>*/}\r\n        {candyMachine?.state.isSoldOut ? (\r\n          'SOLD OUT'\r\n        ) : isMinting ? (\r\n          <CircularProgress />\r\n\r\n        ) : mintPanic.enabled ? (\r\n\r\n          'Mint Paused'\r\n\r\n        ) : (\r\n          'MINT'\r\n        )}\r\n      {/*</div>*/}\r\n    </CTAButton>\r\n  );\r\n};","import { Paper } from '@material-ui/core';\r\nimport Countdown from 'react-countdown';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      padding: theme.spacing(0),\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n        marginRight: 0,\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: '#384457',\r\n        color: 'white',\r\n        borderRadius: 5,\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    done: {\r\n      display: 'flex',\r\n      margin: theme.spacing(1),\r\n      marginRight: 0,\r\n      padding: theme.spacing(1),\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      background: '#384457',\r\n      color: 'white',\r\n      borderRadius: 5,\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    },\r\n    item: {\r\n      fontWeight: 'bold',\r\n      fontSize: 18,\r\n    }\r\n  }),\r\n);\r\n\r\n\r\ninterface PhaseCountdownProps {\r\n  date: Date | undefined;\r\n  style?: React.CSSProperties;\r\n  status?: string;\r\n  onComplete?: () => void;\r\n  start?: Date;\r\n  end?: Date;\r\n}\r\n\r\ninterface CountdownRender {\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport const PhaseCountdown: React.FC<PhaseCountdownProps> = ({\r\n  date,\r\n  status,\r\n  style,\r\n  start,\r\n  end,\r\n  onComplete,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [isFixed, setIsFixed] = useState(start && end && date ? start.getTime() - Date.now() < 0 : false);\r\n\r\n  const renderCountdown = ({ days, hours, minutes, seconds, completed }: CountdownRender) => {\r\n    hours += days * 24\r\n    if (completed) {\r\n      return status ? <span className={classes.done}  >{status}</span> : null;\r\n    } else {\r\n      return (\r\n        <div className={classes.root} style={style} >\r\n          {isFixed && <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              +\r\n            </span>\r\n          </Paper>}\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {hours < 10 ? `0${hours}` : hours}\r\n            </span>\r\n            <span>hrs</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {minutes < 10 ? `0${minutes}` : minutes}\r\n            </span>\r\n            <span>mins</span>\r\n          </Paper>\r\n          <Paper elevation={0}>\r\n            <span className={classes.item}>\r\n              {seconds < 10 ? `0${seconds}` : seconds}\r\n            </span>\r\n            <span>secs</span>\r\n          </Paper>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (date && start && end) {\r\n    if (isFixed) {\r\n      <Countdown\r\n        date={start}\r\n        now={() => end.getTime()}\r\n        onComplete={() => setIsFixed(false)}\r\n        renderer={renderCountdown}\r\n      />\r\n    }\r\n  }\r\n\r\n  if (date) {\r\n    return (\r\n      <Countdown\r\n        date={date}\r\n        onComplete={onComplete}\r\n        renderer={renderCountdown}\r\n      />\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Snackbar } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport { PublicKey } from \"@solana/web3.js\";\r\n\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\n\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n} from \"./candy-machine\";\r\n\r\nimport { AlertState } from \"./utils\";\r\nimport { MintButton } from \"./MintButton\";\r\nimport { getPhase, Phase, PhaseHeader } from \"./PhaseHeader\";\r\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\r\nimport {\r\n  whitelistSettings,\r\n  publicSaleSettings,\r\n  welcomeSettings,\r\n  MintWelcomeCustomHTML,\r\n  MintWhitelistCustomHTML,\r\n  MintPublicSaleCustomHTML,\r\n} from \"./userSettings\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n\r\n`;\r\n\r\nconst MintContainer = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  left: 0px;\r\n  bottom: 15px;\r\n`; // add your styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  // const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\r\n  const rpcUrl = props.rpcHost;\r\n  const [whiteListTokenBalance, setWhiteListTokenBalance] = useState<number>(0);\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n  const [mintingTotal, setMintingTotal] = useState<number | null>(null);\r\n  const [itemsAvailable, setItemsAvailable] = useState<number | null>(null);\r\n  const [publicKey, setPublicKey] = useState<PublicKey>();\r\n\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n\r\n  const [price, setPrice] = useState<number | null>(null);\r\n\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      document.getElementById(\"#identity\")?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        const mintTxId = (\r\n          await mintOneToken(candyMachine, wallet.publicKey)\r\n        )[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            \"singleGossip\",\r\n            true\r\n          );\r\n        }\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n\r\n          setMintingTotal(mintingTotal! + 1);\r\n\r\n          if (whiteListTokenBalance && whiteListTokenBalance > 0)\r\n            setWhiteListTokenBalance(whiteListTokenBalance - 1);\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = \"Transaction Timeout! Please try again.\";\r\n        } else if (error.message.indexOf(\"0x138\")) {\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      setIsMinting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (!anchorWallet) {\r\n        console.log(\"anchor wallet not found\");\r\n        return;\r\n      }\r\n      console.log(\"wallet connected\");\r\n      if (anchorWallet.publicKey) {\r\n        setPublicKey(anchorWallet.publicKey)\r\n      }\r\n\r\n      // try {\r\n      //   const balance = await props.connection.getBalance(\r\n      //     anchorWallet.publicKey\r\n      //   );\r\n      //   console.log(\"Sol balance is: \" + balance);\r\n      //   setYourSOLBalance(balance);\r\n      // } catch (e) {\r\n      //   console.log(\"Problem getting fair launch state\");\r\n      //   console.log(e);\r\n      // }\r\n\r\n      if (props.candyMachineId) {\r\n        try {\r\n          const cndy = await getCandyMachineState(\r\n            anchorWallet,\r\n            props.candyMachineId,\r\n            props.connection\r\n          );\r\n          await setCandyMachine(cndy);\r\n        } catch (e) {\r\n          console.log(\"Problem getting candy machine state\");\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        console.log(\"No candy machine detected in configuration.\");\r\n      }\r\n    })();\r\n  }, [anchorWallet, props.candyMachineId, props.connection]);\r\n\r\n  useEffect(() => {\r\n    async function getTokenAmount() {\r\n      if (\r\n        publicKey &&\r\n        candyMachine?.state.whitelistMintSettings?.mint\r\n      ) {\r\n        try {\r\n          var tokenAmount =\r\n            await props.connection.getParsedTokenAccountsByOwner(\r\n              publicKey,\r\n              { mint: candyMachine?.state.whitelistMintSettings?.mint }\r\n            );\r\n          setWhiteListTokenBalance(\r\n            tokenAmount.value[0].account.data.parsed.info.tokenAmount.amount\r\n          );\r\n        } catch {\r\n          setWhiteListTokenBalance(0);\r\n        }\r\n      }\r\n    }\r\n\r\n    getTokenAmount();\r\n\r\n    if (candyMachine?.state.itemsAvailable) {\r\n      setItemsAvailable(candyMachine?.state.itemsAvailable);\r\n    }\r\n\r\n    if (candyMachine?.state.itemsRedeemed == null) {\r\n      setMintingTotal(0);\r\n    } else {\r\n      setMintingTotal(candyMachine?.state.itemsRedeemed);\r\n    }\r\n\r\n    if (candyMachine?.state.price) {\r\n      setPrice(candyMachine?.state.price.toNumber() / 1000000000);\r\n    }\r\n  }, [candyMachine, publicKey, props.connection]);\r\n\r\n  const phase = getPhase(candyMachine);\r\n\r\n  return (\r\n    <>  \r\n        {!wallet.connected ? (\r\n          <div className=\"connect-button\">\r\n            <ConnectButton className=\"wallet-button\">\r\n              <span className=\"connect-text\">connect wallet</span>\r\n            </ConnectButton>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {candyMachine?.state.isActive &&\r\n              candyMachine?.state.gatekeeper &&\r\n              wallet.publicKey &&\r\n              wallet.signTransaction ? (\r\n              <GatewayProvider\r\n                wallet={{\r\n                  publicKey:\r\n                    wallet.publicKey ||\r\n                    new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                  //@ts-ignore\r\n                  signTransaction: wallet.signTransaction,\r\n                }}\r\n                // // Replace with following when added\r\n                // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\r\n                gatekeeperNetwork={\r\n                  candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                } // This is the ignite (captcha) network\r\n                /// Don't need this for mainnet\r\n                clusterUrl={rpcUrl}\r\n                options={{ autoShowModal: false }}\r\n              >\r\n                <div className=\"connect-button\">\r\n                  <MintButton \r\n                    candyMachine={candyMachine}\r\n                    isMinting={isMinting}\r\n                    onMint={onMint}\r\n                  />\r\n                </div>\r\n              </GatewayProvider>\r\n            ) : (\r\n              <div className=\"connect-button\">\r\n                <MintButton\r\n                  candyMachine={candyMachine}\r\n                  isMinting={isMinting}\r\n                  onMint={onMint}\r\n                />\r\n                <p className=\"counter\"> <br /> Total minted {mintingTotal}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport $ from 'jquery';\r\n\r\nconst Faq = () => {\r\n    useEffect(() => {\r\n        $('.mf1').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross2').removeClass('active');\r\n            $('.cross3').removeClass('active');\r\n            $('.cross4').removeClass('active');\r\n            $('.cross5').removeClass('active');\r\n\r\n            $('.plus2').removeClass('active');\r\n            $('.plus3').removeClass('active');\r\n            $('.plus4').removeClass('active');\r\n            $('.plus5').removeClass('active');\r\n\r\n            $(this).parent().find('.mf1').attr('class')?.split(' ').length === 2 ? $('.mf1').addClass('active') : $('.mf1').removeClass('active');\r\n            $(this).parent().find('.sf1').attr('class')?.split(' ').length === 2 ? $('.sf1').addClass('active') : $('.sf1').removeClass('active');\r\n            $(this).parent().find('.plus1').attr('class')?.split(' ').length === 2 ? $('.plus1').addClass('active') : $('.plus1').removeClass('active');\r\n            $(this).parent().find('.cross1').attr('class')?.split(' ').length === 2 ? $('.cross1').addClass('active') : $('.cross1').removeClass('active');\r\n        });\r\n        $('.mf2').click(function () {\r\n            $('.mf1').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf1').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross1').removeClass('active');\r\n            $('.cross3').removeClass('active');\r\n            $('.cross4').removeClass('active');\r\n            $('.cross5').removeClass('active');\r\n\r\n            $('.plus1').removeClass('active');\r\n            $('.plus3').removeClass('active');\r\n            $('.plus4').removeClass('active');\r\n            $('.plus5').removeClass('active');\r\n\r\n            $(this).parent().find('.mf2').attr('class')?.split(' ').length === 2 ? $('.mf2').addClass('active') : $('.mf2').removeClass('active');\r\n            $(this).parent().find('.sf2').attr('class')?.split(' ').length === 2 ? $('.sf2').addClass('active') : $('.sf2').removeClass('active');\r\n            $(this).parent().find('.plus2').attr('class')?.split(' ').length === 2 ? $('.plus2').addClass('active') : $('.plus2').removeClass('active');\r\n            $(this).parent().find('.cross2').attr('class')?.split(' ').length === 2 ? $('.cross2').addClass('active') : $('.cross2').removeClass('active');\r\n        });\r\n        $('.mf3').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross2').removeClass('active');\r\n            $('.cross1').removeClass('active');\r\n            $('.cross4').removeClass('active');\r\n            $('.cross5').removeClass('active');\r\n\r\n            $('.plus2').removeClass('active');\r\n            $('.plus1').removeClass('active');\r\n            $('.plus4').removeClass('active');\r\n            $('.plus5').removeClass('active');\r\n\r\n            $(this).parent().find('.mf3').attr('class')?.split(' ').length === 2 ? $('.mf3').addClass('active') : $('.mf3').removeClass('active');\r\n            $(this).parent().find('.sf3').attr('class')?.split(' ').length === 2 ? $('.sf3').addClass('active') : $('.sf3').removeClass('active');\r\n            $(this).parent().find('.plus3').attr('class')?.split(' ').length === 2 ? $('.plus3').addClass('active') : $('.plus3').removeClass('active');\r\n            $(this).parent().find('.cross3').attr('class')?.split(' ').length === 2 ? $('.cross3').addClass('active') : $('.cross3').removeClass('active');\r\n        });\r\n        $('.mf4').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross2').removeClass('active');\r\n            $('.cross3').removeClass('active');\r\n            $('.cross1').removeClass('active');\r\n            $('.cross5').removeClass('active');\r\n\r\n            $('.plus2').removeClass('active');\r\n            $('.plus3').removeClass('active');\r\n            $('.plus1').removeClass('active');\r\n            $('.plus5').removeClass('active');\r\n\r\n            $(this).parent().find('.mf4').attr('class')?.split(' ').length === 2 ? $('.mf4').addClass('active') : $('.mf4').removeClass('active');\r\n            $(this).parent().find('.sf4').attr('class')?.split(' ').length === 2 ? $('.sf4').addClass('active') : $('.sf4').removeClass('active');\r\n            $(this).parent().find('.plus4').attr('class')?.split(' ').length === 2 ? $('.plus4').addClass('active') : $('.plus4').removeClass('active');\r\n            $(this).parent().find('.cross4').attr('class')?.split(' ').length === 2 ? $('.cross4').addClass('active') : $('.cross4').removeClass('active');\r\n        });\r\n        $('.mf5').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf6').removeClass('active');\r\n            $('.mf7').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf6').removeClass('active');\r\n            $('.sf7').removeClass('active');\r\n\r\n            $('.cross2').removeClass('active');\r\n            $('.cross3').removeClass('active');\r\n            $('.cross4').removeClass('active');\r\n            $('.cross1').removeClass('active');\r\n\r\n            $('.plus2').removeClass('active');\r\n            $('.plus3').removeClass('active');\r\n            $('.plus4').removeClass('active');\r\n            $('.plus1').removeClass('active');\r\n\r\n            $(this).parent().find('.mf5').attr('class')?.split(' ').length === 2 ? $('.mf5').addClass('active') : $('.mf5').removeClass('active');\r\n            $(this).parent().find('.sf5').attr('class')?.split(' ').length === 2 ? $('.sf5').addClass('active') : $('.sf5').removeClass('active');\r\n            $(this).parent().find('.plus5').attr('class')?.split(' ').length === 2 ? $('.plus5').addClass('active') : $('.plus5').removeClass('active');\r\n            $(this).parent().find('.cross5').attr('class')?.split(' ').length === 2 ? $('.cross5').addClass('active') : $('.cross5').removeClass('active');\r\n        });\r\n        $('.mf6').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n            $('.mf7').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n            $('.sf7').removeClass('active');\r\n\r\n            $('.cross7').removeClass('active');\r\n            $('.cross8').removeClass('active');\r\n            $('.cross9').removeClass('active');\r\n\r\n            $('.plus7').removeClass('active');\r\n            $('.plus8').removeClass('active');\r\n            $('.plus9').removeClass('active');\r\n\r\n            $(this).parent().find('.mf6').attr('class')?.split(' ').length === 2 ? $('.mf6').addClass('active') : $('.mf6').removeClass('active');\r\n            $(this).parent().find('.sf6').attr('class')?.split(' ').length === 2 ? $('.sf6').addClass('active') : $('.sf6').removeClass('active');\r\n            $(this).parent().find('.plus6').attr('class')?.split(' ').length === 2 ? $('.plus6').addClass('active') : $('.plus6').removeClass('active');\r\n            $(this).parent().find('.cross6').attr('class')?.split(' ').length === 2 ? $('.cross6').addClass('active') : $('.cross6').removeClass('active');\r\n        });\r\n        $('.mf7').click(function () {\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf6').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf6').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross6').removeClass('active');\r\n            $('.cross8').removeClass('active');\r\n            $('.cross9').removeClass('active');\r\n\r\n            $('.plus6').removeClass('active');\r\n            $('.plus8').removeClass('active');\r\n            $('.plus9').removeClass('active');\r\n\r\n            $(this).parent().find('.mf7').attr('class')?.split(' ').length === 2 ? $('.mf7').addClass('active') : $('.mf7').removeClass('active');\r\n            $(this).parent().find('.sf7').attr('class')?.split(' ').length === 2 ? $('.sf7').addClass('active') : $('.sf7').removeClass('active');\r\n            $(this).parent().find('.plus7').attr('class')?.split(' ').length === 2 ? $('.plus7').addClass('active') : $('.plus7').removeClass('active');\r\n            $(this).parent().find('.cross7').attr('class')?.split(' ').length === 2 ? $('.cross7').addClass('active') : $('.cross7').removeClass('active');\r\n        });\r\n                /*$('.mf8').click(function () {\r\n            $('.mf7').removeClass('active');\r\n            $('.mf6').removeClass('active');\r\n            $('.mf9').removeClass('active');\r\n\r\n            $('.sf7').removeClass('active');\r\n            $('.sf6').removeClass('active');\r\n            $('.sf9').removeClass('active');\r\n\r\n            $('.cross7').removeClass('active');\r\n            $('.cross6').removeClass('active');\r\n            $('.cross9').removeClass('active');\r\n\r\n            $('.plus7').removeClass('active');\r\n            $('.plus6').removeClass('active');\r\n            $('.plus9').removeClass('active');\r\n\r\n            $(this).parent().find('.mf8').attr('class')?.split(' ').length === 2 ? $('.mf8').addClass('active') : $('.mf8').removeClass('active');\r\n            $(this).parent().find('.sf8').attr('class')?.split(' ').length === 2 ? $('.sf8').addClass('active') : $('.sf8').removeClass('active');\r\n            $(this).parent().find('.plus8').attr('class')?.split(' ').length === 2 ? $('.plus8').addClass('active') : $('.plus8').removeClass('active');\r\n            $(this).parent().find('.cross8').attr('class')?.split(' ').length === 2 ? $('.cross8').addClass('active') : $('.cross8').removeClass('active');\r\n        });\r\n        $('.mf9').click(function () {\r\n            $('.mf7').removeClass('active');\r\n            $('.mf8').removeClass('active');\r\n            $('.mf6').removeClass('active');\r\n\r\n            $('.sf7').removeClass('active');\r\n            $('.sf8').removeClass('active');\r\n            $('.sf6').removeClass('active');\r\n\r\n            $('.cross7').removeClass('active');\r\n            $('.cross8').removeClass('active');\r\n            $('.cross6').removeClass('active');\r\n\r\n            $('.plus7').removeClass('active');\r\n            $('.plus8').removeClass('active');\r\n            $('.plus6').removeClass('active');\r\n\r\n            $(this).parent().find('.mf9').attr('class')?.split(' ').length === 2 ? $('.mf9').addClass('active') : $('.mf9').removeClass('active');\r\n            $(this).parent().find('.sf9').attr('class')?.split(' ').length === 2 ? $('.sf9').addClass('active') : $('.sf9').removeClass('active');\r\n            $(this).parent().find('.plus9').attr('class')?.split(' ').length === 2 ? $('.plus9').addClass('active') : $('.plus9').removeClass('active');\r\n            $(this).parent().find('.cross9').attr('class')?.split(' ').length === 2 ? $('.cross9').addClass('active') : $('.cross9').removeClass('active');\r\n        });\r\n\r\n        $(window).on('load', function () {\r\n            $('.fo-m').addClass('active')\r\n        });\r\n\r\n        $('.fo-m').click(function () {\r\n            $(this).addClass('active');\r\n            $('.fo-g').removeClass('active')\r\n            $('.second-option').removeClass('active');\r\n            $('.first-option').removeClass('active');\r\n\r\n            $('.mf7').removeClass('active');\r\n            $('.mf8').removeClass('active');\r\n            $('.mf6').removeClass('active');\r\n            $('.mf9').removeClass('active');\r\n\r\n            $('.sf7').removeClass('active');\r\n            $('.sf8').removeClass('active');\r\n            $('.sf6').removeClass('active');\r\n            $('.sf9').removeClass('active');\r\n\r\n            $('.cross7').removeClass('active');\r\n            $('.cross8').removeClass('active');\r\n            $('.cross6').removeClass('active');\r\n            $('.cross9').removeClass('active');\r\n\r\n            $('.plus7').removeClass('active');\r\n            $('.plus8').removeClass('active');\r\n            $('.plus6').removeClass('active');\r\n            $('.plus9').removeClass('active');\r\n        });\r\n        $('.fo-g').click(function () {\r\n            $(this).addClass('active');\r\n            $('.fo-m').removeClass('active')\r\n            $('.first-option').addClass('active');\r\n            $('.second-option').addClass('active');\r\n\r\n            $('.mf2').removeClass('active');\r\n            $('.mf3').removeClass('active');\r\n            $('.mf4').removeClass('active');\r\n            $('.mf1').removeClass('active');\r\n            $('.mf5').removeClass('active');\r\n\r\n            $('.sf2').removeClass('active');\r\n            $('.sf3').removeClass('active');\r\n            $('.sf4').removeClass('active');\r\n            $('.sf1').removeClass('active');\r\n            $('.sf5').removeClass('active');\r\n\r\n            $('.cross2').removeClass('active');\r\n            $('.cross3').removeClass('active');\r\n            $('.cross4').removeClass('active');\r\n            $('.cross1').removeClass('active');\r\n            $('.cross5').removeClass('active');\r\n\r\n            $('.plus2').removeClass('active');\r\n            $('.plus3').removeClass('active');\r\n            $('.plus4').removeClass('active');\r\n            $('.plus1').removeClass('active');\r\n            $('.plus5').removeClass('active');\r\n        });*/\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"faq-items\">\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf1\">\r\n                        <div className=\"faq-content\">\r\n                            <p>Who are Kongz Club?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus1\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross1\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf1\">\r\n                        <div className=\"faq-content\">\r\n                            <p>Kongz Club is the brainchild of Cesar. They are on a journey to recruit more monkeys so they can fight ruthless humans who are destroying the world due to technology.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf2\">\r\n                        <div className=\"faq-content\">\r\n                            <p>What features will the Kongz Club have?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus2\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross2\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf2\">\r\n                        <div className=\"faq-content\">\r\n                            <p>More details will be revealed at a later stage.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf3\">\r\n                        <div className=\"faq-content\">\r\n                            <p>Where can I buy or sell my Kongz Club?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus3\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross3\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf3\">\r\n                        <div className=\"faq-content\">\r\n                            <p>You will be able to buy/sell at Magic Eden and Digital Eyes. We are working to list in other markets.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf4\">\r\n                        <div className=\"faq-content\">\r\n                            <p>How can I get on the white list?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus4\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross4\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf4\">\r\n                        <div className=\"faq-content\">\r\n                            <p>Whitelist status is given to prominent members of the Kongz Club community. However, it can also be won through various contests or by verifying an NFT Blue Chip.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf5\">\r\n                        <div className=\"faq-content\">\r\n                            <p>Is my role in WL permanent?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus5\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross5\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf5\">\r\n                        <div className=\"faq-content\">\r\n                            <p>No. We reserve the right to change your feature for any reason. These are some situations that we take very seriously. <br />\r\n                                - Being disrespectful to other members of the community. <br />\r\n                                - Spread FUD instead of good vibes. <br />\r\n                                - Running multiple accounts on the server. <br />\r\n                                - Post links or invitations on the server or explicitly ask members to click on links in your profile.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf6\">\r\n                        <div className=\"faq-content\">\r\n                            <p>I didn't get a WL. Why?</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus6\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross6\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf6\">\r\n                        <div className=\"faq-content\">\r\n                            <p>We really want to be an inclusive community and try to bring as many of you with us. We tried several options to spread\r\n                                them. But there are only limited places for WL and our collection is also limited. Therefore, we cannot provide a\r\n                                place for everyone. I hope you can understand. We know that some of you cannot accept this situation and will be deeply hurt.\r\n                                We can only apologize for it in advance. <br />\r\n\r\n                                If you are an influencer and want to get a WL spot for promotion: <br />\r\n                                if you like our project we would be in love  if you talk about our project on social networks. However, we cannot promise\r\n                                 anything in return, if we cannot reach any terms. We will look at it  case by case basis as we would like organic growth rather than a shilling.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"faq-item\">\r\n                    <div className=\"main-faq mf7\">\r\n                        <div className=\"faq-content\">\r\n                            <p>I am new to SOL NFT. Give me some quick tips.</p>\r\n                            <div>\r\n                                <div className=\"icon-plus plus7\">\r\n                                    <i className=\"uil uil-plus\"></i>\r\n                                </div>\r\n                                <div className=\"icon-cross cross7\">\r\n                                    <i className=\"uil uil-times\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sub-faq sf7\">\r\n                        <div className=\"faq-content\">\r\n                            <p>I am new to SOL NFT. Give me some quick tips. <br />\r\n                                - We recommend u to use Phantom wallet. <br />\r\n                                - You can buy SOL on exchanges like Coinbase, Binance, Kucoin or FTX and send it to your wallet before mint start time. Save an extra 0.05 SOL for the transaction fee. But it can cost less than that. <br />\r\n                                - Always use Burner wallets and transfer the amount of SOL you want to spend to the mint. That will reduce the amount of exposure. <br />\r\n                                THERE ARE THINGS TO ADD TALKING WITH PEOPLE</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Faq;","import \"./App.css\";\r\n\r\nimport { useMemo } from \"react\";\r\n\r\nimport Minter from \"./Minter\";\r\nimport Faq from \"./Components/faq\";\r\n\r\n\r\nimport $ from 'jquery';\r\nimport { useEffect, useState, ChangeEvent } from \"react\";\r\n\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { clusterApiUrl } from \"@solana/web3.js\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolletWallet,\r\n  getMathWallet,\r\n} from \"@solana/wallet-adapter-wallets\";\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from \"@solana/wallet-adapter-react\";\r\n\r\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\r\nimport { ThemeProvider, createTheme } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\r\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\r\n  : undefined;\r\n\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\n\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\n\r\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet(), getMathWallet()],\r\n    []\r\n  );\r\n\r\n  function toggleMenu() {\r\n    const menu = document.getElementById(\"mobileNavContainer\")!;\r\n    menu.classList.toggle(\"open-menu\");\r\n    console.log(\"pressed\");\r\n  }\r\n\r\n  const [timerDays, setTimerDays] = useState('00');\r\n  const [timerHours, setTimerHours] = useState('00');\r\n  const [timerMinutes, setTimerMinutes] = useState('00');\r\n  const [timerSeconds, setTimerSeconds] = useState('00');\r\n\r\n  const startTimer = () => {\r\n    //const countDownDate = new Date(Date.UTC(2021,11,26,15,30)).getTime();\r\n    const test = new Date('Dec 26, 2021 16:00:00 UTC')\r\n    const countDownDate = new Date('Jan 20, 2022 16:00:00 UTC').getTime();\r\n    //'Dec 26, 2021 11:00:00'\r\n    setInterval(() => {\r\n      const now = new Date();\r\n      const localTime = now.getTime();\r\n      const distance = countDownDate - localTime;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance > 0) {\r\n        //clearInterval(interval);\r\n        setTimerDays(days.toString());\r\n        setTimerHours(hours.toString());\r\n        setTimerMinutes(minutes.toString());\r\n        setTimerSeconds(seconds.toString());\r\n      } else {\r\n        clearInterval();\r\n      }\r\n\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n    return () => {\r\n      clearInterval();\r\n    }\r\n  });\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container logo\">\r\n        <img className=\"image-logo\" src=\"image/logo.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"container header\">\r\n        <img className=\"image-header\" src=\"image/bg1.jpeg\" alt=\"\" />\r\n        <div className=\"container-button\">\r\n          <div className=\"mint-button\">\r\n            <p>Total supply : 777</p>\r\n            <ThemeProvider theme={theme}>\r\n              <ConnectionProvider endpoint={endpoint}>\r\n                <WalletProvider wallets={wallets} autoConnect>\r\n                  <WalletDialogProvider>\r\n                    <Minter\r\n                      candyMachineId={candyMachineId}\r\n                      connection={connection}\r\n                      startDate={startDateSeed}\r\n                      txTimeout={txTimeout}\r\n                      rpcHost={rpcHost}\r\n                    />\r\n                  </WalletDialogProvider>\r\n                </WalletProvider>\r\n              </ConnectionProvider>\r\n            </ThemeProvider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section className=\"text initial\">\r\n          <h1>6969 CHAD APES with super ape capabilities</h1>\r\n          <p>In the near future, as part of an experiment - 10,000 Apes on the Ethereum blockchain were exposed to a\r\n            super ape serum which transmogrified them into 6969 CHAD Apes with super-ape capabilities.</p>\r\n          <p>The remaining 3031 Apes had an adverse reaction to the super-ape serum which turned them into vicious\r\n            monsters. These Monster Apes are now wandering the Ethereum blockchain waiting to be captured and cured\r\n            with the help of an anti-dote.</p>\r\n          <p>CHAD Apes are inspired by the OG Bored Apes but are not associated with them. They are created from scratch\r\n            where no details were spared to bring a perfect NFT. Your Chad Ape will grant you access to exclusive perks\r\n            including, future drops, giveaways, IRL events and $CHAD token.</p>\r\n        </section>\r\n      </div>\r\n      <div className=\"image-collection\">\r\n        <img src=\"image/img1.png\" alt=\"\" />\r\n        <img src=\"image/img2.png\" alt=\"\" />\r\n        <img src=\"image/img3.png\" alt=\"\" />\r\n        <img src=\"image/img4.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"container\">\r\n        <section className=\"text token\">\r\n          <h1>STAKE YOUR CHAD APE TO EARN $CHAD</h1>\r\n          <p>Staking is the process where you can lock you Chad Ape for rewards. You will be rewarded by way of $CHAD\r\n            tokens. Each staked CHAD Ape will earn you 10 $CHAD/ per day. There are tons of ways you can use these\r\n            $CHAD tokens within the CHAD APE GYM CLUB (CAGC) ecosystem.</p>\r\n          <p>That is not it, You will receive 100 $CHAD for each chad ape held on 01/27/2022, 11:45 AM EST</p>\r\n          <span className=\"token-button\">Soon</span>\r\n        </section>\r\n      </div>\r\n      <div className=\"container roadmap\">\r\n        <section>\r\n          <h1>ROADMAP</h1>\r\n          <p>At the outset, Chad Ape Gym Club would strive to create a thriving ecosystem and unite all the Apes.</p>\r\n          <div className=\"row\">\r\n            <div className=\"row-left\">\r\n              <img src=\"image/gif4.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"row-right\">\r\n              <ul>\r\n                <h2>Phase 1</h2>\r\n                <li>Assemble team.</li>\r\n                <li>Creation of social media and website.</li>\r\n                <li>release of Kongz.</li>\r\n                <li>Pre-approved by me.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"row-left\">\r\n              <img src=\"image/gif4.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"row-right\">\r\n              <ul>\r\n                <h2>Phase 2</h2>\r\n                <li>Creation of an exclusive DAO.</li>\r\n                <li>Release of $BANANA token.</li>\r\n                <li>Staking to earn daily rewards.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"row-left\">\r\n              <img src=\"image/gif4.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"row-right\">\r\n              <ul>\r\n                <h2>Phase 3</h2>\r\n                <li>Evolution of Kongz by combining 1 Kong + $BANANA</li>\r\n                <li>System of asset improvements through the burning of the $BANANA token</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"row-left\">\r\n              <img src=\"image/gif4.gif\" alt=\"\" />\r\n            </div>\r\n            <div className=\"row-right\">\r\n              <ul>\r\n                <h2>Phase 4</h2>\r\n                <li>Special Kongz editions for special dates</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div className=\"container team\">\r\n        <section>\r\n          <h1>CHAD TEAM</h1>\r\n          <p>Experience includes working with Disney, Netflix etc.</p>\r\n          <div className=\"integrant\">\r\n            <div className=\"card-integrant\">\r\n              <img src=\"image/test.png\" alt=\"\" />\r\n              <span className = \"integrant-name\">Lord Black</span>\r\n              <span className = \"integrant-type\">Co-Founder</span>\r\n            </div>\r\n            <div className=\"card-integrant\">\r\n              <img src=\"image/test.png\" alt=\"\" />\r\n              <span className = \"integrant-name\">King Kong</span>\r\n              <span className = \"integrant-type\">Co-Founder</span>\r\n            </div>\r\n            <div className=\"card-integrant\">\r\n              <img src=\"image/test.png\" alt=\"\" />\r\n              <span className = \"integrant-name\">Cesar</span>\r\n              <span className = \"integrant-type\">Artist</span>\r\n            </div>\r\n            <div className=\"card-integrant\">\r\n              <img src=\"image/test.png\" alt=\"\" />\r\n              <span className = \"integrant-name\">S1nner</span>\r\n              <span className = \"integrant-type\">Developer</span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div className=\"container supply-container\">\r\n        <section>\r\n          <div className=\"supply\">\r\n            <div className=\"information\">\r\n              <span className = \"i-u\">777</span>\r\n              <span className = \"i-d\">Total Supply</span>\r\n            </div>\r\n            <div className=\"information\">\r\n              <span className = \"i-u\">0.77 SOL</span>\r\n              <span className = \"i-d\">Public Mint</span>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section>\r\n          <h1>FAQ</h1>\r\n          <div className=\"faq\">\r\n            <Faq></Faq>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <div className=\"container\">\r\n        <section className=\"footer\">\r\n          <img className=\"image-footer\" src=\"image/logo2.png\" alt=\"\" />\r\n          <span>Copyright © KongzClub 2022. All Rights Reserved.</span>\r\n          <div className=\"social\">\r\n            <a href=\"/\"><img src=\"icons/discord.svg\" alt=\"\" /></a>\r\n            <a href=\"/\"><img src=\"icons/twitter.svg\" alt=\"\" /></a>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import * as anchor from '@project-serum/anchor';\r\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\r\nimport { SystemProgram } from '@solana/web3.js';\r\nimport {\r\n  LAMPORTS_PER_SOL,\r\n  SYSVAR_RENT_PUBKEY,\r\n  TransactionInstruction,\r\n} from '@solana/web3.js';\r\n\r\nexport interface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\r\n}\r\n\r\nexport const FAIR_LAUNCH_PROGRAM_ID = new anchor.web3.PublicKey(\r\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\r\n);\r\n\r\nexport const toDate = (value?: anchor.BN) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  return new Date(value.toNumber() * 1000);\r\n};\r\n\r\nconst numberFormater = new Intl.NumberFormat('en-US', {\r\n  style: 'decimal',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport const formatNumber = {\r\n  format: (val?: number) => {\r\n    if (!val) {\r\n      return '--';\r\n    }\r\n\r\n    return numberFormater.format(val);\r\n  },\r\n  asNumber: (val?: anchor.BN) => {\r\n    if (!val) {\r\n      return undefined;\r\n    }\r\n\r\n    return val.toNumber() / LAMPORTS_PER_SOL;\r\n  },\r\n};\r\n\r\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\r\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\nexport const CIVIC = new anchor.web3.PublicKey(\r\n  'gatem74V238djXdzWnJf94Wo1DcnuGkfijbf3AuBhfs',\r\n);\r\nexport const getFairLaunchTicketSeqLookup = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  seq: anchor.BN,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      Buffer.from('fair_launch'),\r\n      tokenMint.toBuffer(),\r\n      seq.toArrayLike(Buffer, 'le', 8),\r\n    ],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getAtaForMint = async (\r\n  mint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\r\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport const getNetworkExpire = async (\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [gatekeeperNetwork.toBuffer(), Buffer.from('expire')],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getNetworkToken = async (\r\n  wallet: anchor.web3.PublicKey,\r\n  gatekeeperNetwork: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [\r\n      wallet.toBuffer(),\r\n      Buffer.from('gateway'),\r\n      Buffer.from([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      gatekeeperNetwork.toBuffer(),\r\n    ],\r\n    CIVIC,\r\n  );\r\n};\r\n\r\nexport const getFairLaunchTicket = async (\r\n  tokenMint: anchor.web3.PublicKey,\r\n  buyer: anchor.web3.PublicKey,\r\n): Promise<[anchor.web3.PublicKey, number]> => {\r\n  return await anchor.web3.PublicKey.findProgramAddress(\r\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\r\n    FAIR_LAUNCH_PROGRAM_ID,\r\n  );\r\n};\r\n\r\nexport function createAssociatedTokenAccountInstruction(\r\n  associatedTokenAddress: anchor.web3.PublicKey,\r\n  payer: anchor.web3.PublicKey,\r\n  walletAddress: anchor.web3.PublicKey,\r\n  splTokenMintAddress: anchor.web3.PublicKey,\r\n) {\r\n  const keys = [\r\n    {\r\n      pubkey: payer,\r\n      isSigner: true,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: associatedTokenAddress,\r\n      isSigner: false,\r\n      isWritable: true,\r\n    },\r\n    {\r\n      pubkey: walletAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: splTokenMintAddress,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SystemProgram.programId,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: TOKEN_PROGRAM_ID,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n    {\r\n      pubkey: SYSVAR_RENT_PUBKEY,\r\n      isSigner: false,\r\n      isWritable: false,\r\n    },\r\n  ];\r\n  return new TransactionInstruction({\r\n    keys,\r\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\r\n    data: Buffer.from([]),\r\n  });\r\n}\r\n\r\nexport function formatSol(sol:number){\r\n    var formated = sol / 1000000000\r\n    return formated\r\n}\r\n\r\n"],"sourceRoot":""}